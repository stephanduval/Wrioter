import type { RouteRecordRaw } from 'vue-router/auto'

const emailRouteComponent = () => import('@/pages/apps/email/index.vue')

export const routes: RouteRecordRaw[] = [
  // Email filter
  {
    path: '/apps/email/filter/:filter',
    name: 'apps-email-filter',
    component: emailRouteComponent,
    meta: {
      navActiveLink: 'apps-email',
      layoutWrapperClasses: 'layout-content-height-fixed',
      action: 'read', // Add CASL action
      subject: 'client', // Add CASL subject
      requiresAuth: true, // Assuming authentication is needed
    },
  },

  // Email label
  {
    path: '/apps/email/label/:label',
    name: 'apps-email-label',
    component: emailRouteComponent,
    meta: {
      navActiveLink: 'apps-email',
      layoutWrapperClasses: 'layout-content-height-fixed',
      action: 'read', // Add CASL action
      subject: 'client', // Add CASL subject
      requiresAuth: true, // Assuming authentication is needed
    },
  },
  
  // START: Add Messages List Route
  {
    path: '/messages/list', // Define the URL path
    name: 'messages-list', // Assign the name used in the redirect
    component: emailRouteComponent, // Reuse the email component
    meta: {
      navActiveLink: 'apps-email', // Keep the sidebar active on email
      layoutWrapperClasses: 'layout-content-height-fixed', // Match email layout
      action: 'read',        // CASL action for Manager/User
      subject: 'manager',    // CASL subject for Manager/User (Ensure manager role has this permission)
      requiresAuth: true,    // Requires login
    },
  },
  // END: Add Messages List Route

  {
    path: '/dashboards/logistics',
    name: 'dashboards-logistics',
    component: () => import('@/pages/apps/logistics/dashboard.vue'),
    // Add meta if needed:
    // meta: { action: 'read', subject: 'someSubject', requiresAuth: true }
  },
  {
    path: '/dashboards/academy',
    name: 'dashboards-academy',
    component: () => import('@/pages/apps/academy/dashboard.vue'),
    // Add meta if needed:
    // meta: { action: 'read', subject: 'someSubject', requiresAuth: true }
  },
  {
    path: '/apps/ecommerce/dashboard',
    name: 'apps-ecommerce-dashboard',
    component: () => import('@/pages/dashboards/ecommerce.vue'),
    // Add meta if needed:
    // meta: { action: 'read', subject: 'someSubject', requiresAuth: true }
  },
]

// 👉 Redirects
export const redirects: RouteRecordRaw[] = [
  // ℹ️ We are redirecting to different pages based on role.
  // NOTE: Role is just for UI purposes. ACL is based on abilities.
  {
    path: '/',
    name: 'index',
    redirect: to => {
      const userData = useCookie<{ role?: string }>('userData').value
      const userRole = userData?.role?.toLowerCase()

      console.log('Redirecting based on role:', userRole)

      if (userRole === 'admin')
        return { name: 'dashboards-crm' }
      if (userRole === 'client')
        return { name: 'apps-email' } 
      if (userRole === 'manager')
        return { path: '/messages/list' } // <--- Use path instead of name
      if (userRole === 'user')
        return { path: '/messages/list' } // <--- Use path instead of name
      
      // Default redirect if role doesn't match or is missing
      return { name: 'dashboards-crm', query: to.query } 
    },
  },
  {
    path: '/pages/user-profile',
    name: 'pages-user-profile',
    redirect: () => ({ name: 'pages-user-profile-tab', params: { tab: 'profile' } }),
  },
  {
    path: '/pages/account-settings',
    name: 'pages-account-settings',
    redirect: () => ({ name: 'pages-account-settings-tab', params: { tab: 'account' } }),
  },
] 
